/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.fupunb.numerador_FUP.TelasDeInteracao;

import br.com.fupunb.numerador_FUP.Classes.Documento;
import br.com.fupunb.numerador_FUP.Classes.Servidor;
import br.com.fupunb.numerador_FUP.Conexao_BD.Conecta_MySql;
import java.awt.Dimension;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author marcio
 */
public class Tela_Consultar extends javax.swing.JInternalFrame {

    /**
     * Creates new form Tela_Consultar
     */
    public Tela_Consultar() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable_NUMEROS_SOLICITADOS = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jTF_MATRICULA_FUB = new javax.swing.JTextField();
        jTF_ESPELHO_MATRICULA = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jPF_SENHA = new javax.swing.JPasswordField();
        jBt_VISUALIZAR_TABELA = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jBt_CARTA = new javax.swing.JButton();
        jBt_MEMORANDO = new javax.swing.JButton();
        jBt_TODOS = new javax.swing.JButton();
        jBt_OFICIO = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("CONSULTAR NUMEROS GERADOS");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jTable_NUMEROS_SOLICITADOS.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "MATRICULA", "USUÁRIO", "TIPO DE DOCUMENTO", "NÚMERO GERADO", "ASSUNTO", "REMETENTE", "DESTINATÁRIO", "DATA DE EMISSÃO"
            }
        ));
        jScrollPane2.setViewportView(jTable_NUMEROS_SOLICITADOS);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("MATRÍCULA:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("SENHA:");

        jBt_VISUALIZAR_TABELA.setBackground(new java.awt.Color(255, 255, 0));
        jBt_VISUALIZAR_TABELA.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jBt_VISUALIZAR_TABELA.setForeground(new java.awt.Color(51, 102, 0));
        jBt_VISUALIZAR_TABELA.setText("VISUALIZAR");
        jBt_VISUALIZAR_TABELA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBt_VISUALIZAR_TABELAActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 51, 51));
        jLabel3.setText("(A mesma senha cadastrada para acessar o Numerador de Documentos)");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("FILTRAR POR TIPO DE DOCUMENTO: ");

        jBt_CARTA.setBackground(new java.awt.Color(255, 255, 255));
        jBt_CARTA.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBt_CARTA.setText("CARTA");
        jBt_CARTA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBt_CARTAActionPerformed(evt);
            }
        });

        jBt_MEMORANDO.setBackground(new java.awt.Color(255, 255, 255));
        jBt_MEMORANDO.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBt_MEMORANDO.setText("MEMORANDO");
        jBt_MEMORANDO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBt_MEMORANDOActionPerformed(evt);
            }
        });

        jBt_TODOS.setBackground(new java.awt.Color(255, 255, 255));
        jBt_TODOS.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBt_TODOS.setText("TODOS");
        jBt_TODOS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBt_TODOSActionPerformed(evt);
            }
        });

        jBt_OFICIO.setBackground(new java.awt.Color(255, 255, 255));
        jBt_OFICIO.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBt_OFICIO.setText("OFÍCIO");
        jBt_OFICIO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBt_OFICIOActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 989, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jBt_VISUALIZAR_TABELA, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTF_MATRICULA_FUB)
                    .addComponent(jPF_SENHA, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 482, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jBt_CARTA, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jBt_TODOS, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBt_MEMORANDO))
                        .addGap(18, 18, 18)
                        .addComponent(jBt_OFICIO, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTF_ESPELHO_MATRICULA, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(105, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTF_MATRICULA_FUB)
                    .addComponent(jTF_ESPELHO_MATRICULA, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPF_SENHA)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jBt_CARTA, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBt_OFICIO, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBt_MEMORANDO)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jBt_VISUALIZAR_TABELA))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBt_TODOS)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBt_VISUALIZAR_TABELAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBt_VISUALIZAR_TABELAActionPerformed

        visualizarTabelaSolicitacoesFinalizadas();
    }//GEN-LAST:event_jBt_VISUALIZAR_TABELAActionPerformed

    private void jBt_CARTAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBt_CARTAActionPerformed

        try {
            visualizarTabelaTipoDocumento("CARTA", jTable_NUMEROS_SOLICITADOS);
        } catch (IOException | SQLException ex) {
            System.out.println("NÃO FOI POSSÍVEL LOCALIZAR ESSE FILTRO: " + ex);
        }
    }//GEN-LAST:event_jBt_CARTAActionPerformed

    private void jBt_MEMORANDOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBt_MEMORANDOActionPerformed

        try {
            visualizarTabelaTipoDocumento("MEMORANDO", jTable_NUMEROS_SOLICITADOS);
        } catch (IOException | SQLException ex) {
            System.out.println("NÃO FOI POSSÍVEL LOCALIZAR ESSE FILTRO: " + ex);
        }
    }//GEN-LAST:event_jBt_MEMORANDOActionPerformed

    private void jBt_TODOSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBt_TODOSActionPerformed
        try {
            limparTabela(jTable_NUMEROS_SOLICITADOS);
            preencherTabela(jTable_NUMEROS_SOLICITADOS, jTF_ESPELHO_MATRICULA.getText());
        } catch (IOException | SQLException ex) {
            System.out.println("NÃO FOI POSSÍVEL LOCALIZAR ESSE FILTRO: " + ex);
        }
    }//GEN-LAST:event_jBt_TODOSActionPerformed

    private void jBt_OFICIOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBt_OFICIOActionPerformed
        try {
            visualizarTabelaTipoDocumento("OFÍCIO", jTable_NUMEROS_SOLICITADOS);
        } catch (IOException | SQLException ex) {
            System.out.println("NÃO FOI POSSÍVEL LOCALIZAR ESSE FILTRO: " + ex);
        }
    }//GEN-LAST:event_jBt_OFICIOActionPerformed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        ocultarTiposFiltro();
    }//GEN-LAST:event_formInternalFrameOpened


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBt_CARTA;
    private javax.swing.JButton jBt_MEMORANDO;
    private javax.swing.JButton jBt_OFICIO;
    private javax.swing.JButton jBt_TODOS;
    private javax.swing.JButton jBt_VISUALIZAR_TABELA;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPasswordField jPF_SENHA;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTF_ESPELHO_MATRICULA;
    private javax.swing.JTextField jTF_MATRICULA_FUB;
    private javax.swing.JTable jTable_NUMEROS_SOLICITADOS;
    // End of variables declaration//GEN-END:variables

    public void setPosicao() {
        Dimension d = this.getDesktopPane().getSize();
        this.setLocation((d.width - this.getSize().width) / 2, (d.height - this.getSize().height) / 2);
    }

    public void preencherTabela(JTable tabela, String matricula) throws IOException, SQLException {

        Servidor setarId = new Servidor();
        setarId.setMatriculaFUB(matricula);
        Documento setarfk_serv_doc = new Documento();

        Tela_Principal metodo = new Tela_Principal();//instancia para chamar metodo de localização do id

        setarId.setId_serv(metodo.buscandoId_servUsuario(setarId.getMatriculaFUB()/*localizando id para fazer join*/));
        setarfk_serv_doc.setFk_serv_doc(setarId.getId_serv());
        DefaultTableModel Tabela = (DefaultTableModel) tabela.getModel();
        Connection conexao = Conecta_MySql.conectarDB();
        try {
            PreparedStatement listarDadosTabela = conexao.prepareStatement("select servidor.MATRICULAFUB, servidor.NOME,documento.NOME_DOC, documento.NUMERO_FORMATADO,\n"
                    + "documento.ASSUNTO, documento.REMETENTE, documento.DESTINATARIO, documento.DATA_DE_EMISSAO\n"
                    + "from servidor join documento on documento.id_serv = servidor.id_serv order by documento.NOME_DOC");

            ResultSet rs = listarDadosTabela.executeQuery();
            while (rs.next()) {

                if (setarId.getMatriculaFUB().equals("ADMIN")) {
                    Tabela.addRow(new String[]{rs.getString("MATRICULAFUB"), rs.getString("NOME"), rs.getString("NOME_DOC"),
                        rs.getString("NUMERO_FORMATADO"),
                        rs.getString("ASSUNTO"), rs.getString("REMETENTE"), rs.getString("DESTINATARIO"),
                        rs.getString("DATA_DE_EMISSAO")});

                } else if (rs.getString("MATRICULAFUB").equals(setarId.getMatriculaFUB())) {
                    Tabela.addRow(new String[]{rs.getString("MATRICULAFUB"), rs.getString("NOME"), rs.getString("NOME_DOC"),
                        rs.getString("NUMERO_FORMATADO"),
                        rs.getString("ASSUNTO"), rs.getString("REMETENTE"), rs.getString("DESTINATARIO"),
                        rs.getString("DATA_DE_EMISSAO")});
                }

            }
        } finally {
            if (conexao != null) {
                conexao.close();
                System.out.print("conexao finalizada.");
            }
        }
    }

    public void visualizarTabelaSolicitacoesFinalizadas() {

        Servidor identificandoUsuario = new Servidor();
        jTF_ESPELHO_MATRICULA.setText(jTF_MATRICULA_FUB.getText());
        identificandoUsuario.setMatriculaFUB(jTF_ESPELHO_MATRICULA.getText());
        identificandoUsuario.setSenha(jPF_SENHA.getText());
        try {
            boolean acessoLiberado = identificandoUsuario.verificarAcessoUsuario(identificandoUsuario.getMatriculaFUB(), identificandoUsuario.getSenha());
            if (acessoLiberado) {
                preencherTabela(jTable_NUMEROS_SOLICITADOS, identificandoUsuario.getMatriculaFUB());
                jTF_MATRICULA_FUB.setText("");
                jPF_SENHA.setText("");
                jTF_MATRICULA_FUB.setEnabled(false);
                jPF_SENHA.setEnabled(false);
                jBt_VISUALIZAR_TABELA.setEnabled(false);
                exibirTiposFiltro();
            } else {
                JOptionPane.showMessageDialog(null, "SENHA OU MATRICULA INVÁLIDA!");
                jTF_MATRICULA_FUB.setText("");
                jPF_SENHA.setText("");
                jTF_MATRICULA_FUB.requestFocus();

            }
        } catch (IOException | SQLException e) {
            System.out.println(e);
        }

    }

    public void visualizarTabelaTipoDocumento(String tipoNome, JTable tabela) throws IOException, SQLException {

        Documento manipularDoc = new Documento();
        Servidor setarId = new Servidor();
        setarId.setMatriculaFUB(jTF_ESPELHO_MATRICULA.getText());
        manipularDoc.setNomeDOC(tipoNome);
        limparTabela(jTable_NUMEROS_SOLICITADOS);

        Tela_Principal metodo = new Tela_Principal();//instancia para chamar metodo de localização do id

        setarId.setId_serv(metodo.buscandoId_servUsuario(setarId.getMatriculaFUB()/*localizando id para fazer join*/));
        manipularDoc.setFk_serv_doc(setarId.getId_serv());
        DefaultTableModel Tabela = (DefaultTableModel) tabela.getModel();
        Connection conexao = Conecta_MySql.conectarDB();
        try {
            PreparedStatement listarDadosTabela = conexao.prepareStatement("select servidor.MATRICULAFUB, servidor.NOME,documento.NOME_DOC, documento.NUMERO_FORMATADO,\n"
                    + "documento.ASSUNTO, documento.REMETENTE, documento.DESTINATARIO, documento.DATA_DE_EMISSAO\n"
                    + "from servidor join documento on documento.id_serv = servidor.id_serv "
                    + "where documento.NOME_DOC = ? order by documento.NUMERO_FORMATADO");
            listarDadosTabela.setString(1, manipularDoc.getNomeDOC());
            ResultSet rs = listarDadosTabela.executeQuery();
            while (rs.next()) {

                if (setarId.getMatriculaFUB().equals("ADMIN")) {
                    Tabela.addRow(new String[]{rs.getString("MATRICULAFUB"), rs.getString("NOME"), rs.getString("NOME_DOC"),
                        rs.getString("NUMERO_FORMATADO"),
                        rs.getString("ASSUNTO"), rs.getString("REMETENTE"), rs.getString("DESTINATARIO"),
                        rs.getString("DATA_DE_EMISSAO")});

                } else if (rs.getString("MATRICULAFUB").equals(setarId.getMatriculaFUB())) {
                    Tabela.addRow(new String[]{rs.getString("MATRICULAFUB"), rs.getString("NOME"), rs.getString("NOME_DOC"),
                        rs.getString("NUMERO_FORMATADO"),
                        rs.getString("ASSUNTO"), rs.getString("REMETENTE"), rs.getString("DESTINATARIO"),
                        rs.getString("DATA_DE_EMISSAO")});
                }
            }
        } finally {
            if (conexao != null) {
                conexao.close();
                System.out.print("conexao finalizada.");
            }
        }

    }

    public void limparTabela(JTable tabela) {

        DefaultTableModel val = (DefaultTableModel) tabela.getModel();

        for (int i = tabela.getRowCount(); i >= 0; i--) {

            if (i > 0) {
                //JOptionPane.showMessageDialog(null, i);
                val.removeRow(0);

            }

        }
    }

    public void ocultarTiposFiltro() {

        jTF_ESPELHO_MATRICULA.setVisible(false);
        jLabel4.setVisible(false);
        jBt_MEMORANDO.setVisible(false);
        jBt_OFICIO.setVisible(false);
        jBt_CARTA.setVisible(false);
        jBt_TODOS.setVisible(false);
    }

    public void exibirTiposFiltro() {

        jLabel4.setVisible(true);
        jBt_MEMORANDO.setVisible(true);
        jBt_OFICIO.setVisible(true);
        jBt_CARTA.setVisible(true);
        jBt_TODOS.setVisible(true);
    }

}
