/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.fupunb.numerador_FUP.TelasDeInteracao;

import br.com.fupunb.numerador_FUP.Classes.Servidor;
import java.awt.Dimension;
import java.sql.SQLException;
import java.util.Properties;
import java.util.Random;
import javax.mail.Address;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author marcio
 */
public class Tela_Cadastrar_Senha extends javax.swing.JInternalFrame {

    /**
     * Creates new form Tela_Cadastrar_Senha
     */
    public Tela_Cadastrar_Senha() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel_NOME = new javax.swing.JLabel();
        jLabel_EMAIL = new javax.swing.JLabel();
        jLabel_DIGITE_CODIGO = new javax.swing.JLabel();
        jLabel_ESCOLHA_SENHA = new javax.swing.JLabel();
        jB_GERAR_CODIGO = new javax.swing.JButton();
        jTF_MATRICULA_FUB = new javax.swing.JTextField();
        jB_AVANCAR_MATRICULA = new javax.swing.JButton();
        jTF_NOME = new javax.swing.JTextField();
        jTF_EMAIL = new javax.swing.JTextField();
        jLabel_INFORME = new javax.swing.JLabel();
        jTF_CODIGO_VERIFICADOR = new javax.swing.JTextField();
        jB_VERIFICAR_CODIGO = new javax.swing.JButton();
        jPasswordF_ESCOLHER_SENHA = new javax.swing.JPasswordField();
        jB_CADASTRAR_SENHA = new javax.swing.JButton();
        jTF_ESPELHO_CODIGO_VERIFICACAO = new javax.swing.JTextField();

        setTitle("CADASTRO DE USUÁRIO");
        addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                formAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("INFORME SUA MATRICULA: ");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(60, 50, 160, 30);

        jLabel_NOME.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel_NOME.setText("NOME:");
        getContentPane().add(jLabel_NOME);
        jLabel_NOME.setBounds(170, 90, 40, 30);

        jLabel_EMAIL.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel_EMAIL.setText("E-MAIL:");
        getContentPane().add(jLabel_EMAIL);
        jLabel_EMAIL.setBounds(170, 130, 50, 30);

        jLabel_DIGITE_CODIGO.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel_DIGITE_CODIGO.setText("DIGITE O CÓDIGO DE VERIFICAÇÃO:");
        getContentPane().add(jLabel_DIGITE_CODIGO);
        jLabel_DIGITE_CODIGO.setBounds(10, 250, 210, 30);

        jLabel_ESCOLHA_SENHA.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel_ESCOLHA_SENHA.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel_ESCOLHA_SENHA.setText("ESCOLHA SUA SENHA:");
        getContentPane().add(jLabel_ESCOLHA_SENHA);
        jLabel_ESCOLHA_SENHA.setBounds(10, 290, 200, 30);

        jB_GERAR_CODIGO.setBackground(new java.awt.Color(255, 255, 51));
        jB_GERAR_CODIGO.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jB_GERAR_CODIGO.setForeground(new java.awt.Color(255, 0, 0));
        jB_GERAR_CODIGO.setText("GEAR CÓDIGO");
        jB_GERAR_CODIGO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_GERAR_CODIGOActionPerformed(evt);
            }
        });
        getContentPane().add(jB_GERAR_CODIGO);
        jB_GERAR_CODIGO.setBounds(230, 190, 140, 50);
        getContentPane().add(jTF_MATRICULA_FUB);
        jTF_MATRICULA_FUB.setBounds(230, 50, 140, 30);

        jB_AVANCAR_MATRICULA.setBackground(new java.awt.Color(204, 204, 204));
        jB_AVANCAR_MATRICULA.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jB_AVANCAR_MATRICULA.setForeground(new java.awt.Color(255, 0, 51));
        jB_AVANCAR_MATRICULA.setText("AVANÇAR >>");
        jB_AVANCAR_MATRICULA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_AVANCAR_MATRICULAActionPerformed(evt);
            }
        });
        getContentPane().add(jB_AVANCAR_MATRICULA);
        jB_AVANCAR_MATRICULA.setBounds(380, 50, 110, 30);
        getContentPane().add(jTF_NOME);
        jTF_NOME.setBounds(230, 90, 320, 30);
        getContentPane().add(jTF_EMAIL);
        jTF_EMAIL.setBounds(230, 130, 320, 30);

        jLabel_INFORME.setBackground(new java.awt.Color(0, 255, 255));
        jLabel_INFORME.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel_INFORME.setForeground(new java.awt.Color(0, 102, 102));
        jLabel_INFORME.setText("CASO SEU NOME E/OU E-MAIL NÃO ESTEJAM CORRETOS, SOLICITE A ATUALIZAÇÃO AO RESPONSÁVEL PELO SETOR");
        getContentPane().add(jLabel_INFORME);
        jLabel_INFORME.setBounds(10, 170, 650, 20);
        getContentPane().add(jTF_CODIGO_VERIFICADOR);
        jTF_CODIGO_VERIFICADOR.setBounds(230, 250, 140, 30);

        jB_VERIFICAR_CODIGO.setBackground(new java.awt.Color(0, 102, 102));
        jB_VERIFICAR_CODIGO.setForeground(new java.awt.Color(255, 255, 0));
        jB_VERIFICAR_CODIGO.setText("VERFICAR >>");
        jB_VERIFICAR_CODIGO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_VERIFICAR_CODIGOActionPerformed(evt);
            }
        });
        getContentPane().add(jB_VERIFICAR_CODIGO);
        jB_VERIFICAR_CODIGO.setBounds(380, 250, 130, 30);
        getContentPane().add(jPasswordF_ESCOLHER_SENHA);
        jPasswordF_ESCOLHER_SENHA.setBounds(230, 290, 140, 30);

        jB_CADASTRAR_SENHA.setBackground(new java.awt.Color(255, 255, 0));
        jB_CADASTRAR_SENHA.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jB_CADASTRAR_SENHA.setForeground(new java.awt.Color(51, 102, 0));
        jB_CADASTRAR_SENHA.setText("CADASTRAR >>");
        jB_CADASTRAR_SENHA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_CADASTRAR_SENHAActionPerformed(evt);
            }
        });
        getContentPane().add(jB_CADASTRAR_SENHA);
        jB_CADASTRAR_SENHA.setBounds(380, 290, 130, 30);
        getContentPane().add(jTF_ESPELHO_CODIGO_VERIFICACAO);
        jTF_ESPELHO_CODIGO_VERIFICACAO.setBounds(520, 250, 100, 30);

        setBounds(0, 0, 679, 366);
    }// </editor-fold>//GEN-END:initComponents

    private void jB_AVANCAR_MATRICULAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_AVANCAR_MATRICULAActionPerformed

        botaoAvancar();
    }//GEN-LAST:event_jB_AVANCAR_MATRICULAActionPerformed

    private void jB_CADASTRAR_SENHAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_CADASTRAR_SENHAActionPerformed

        botaoCadastrar();
    }//GEN-LAST:event_jB_CADASTRAR_SENHAActionPerformed

    private void jB_GERAR_CODIGOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_GERAR_CODIGOActionPerformed

        if (jTF_NOME.getText().equals("ADMINISTRADOR")) {
            JOptionPane.showMessageDialog(null, "NÃO É PERMITIDO O CADASTRO DE NOVA SENHA PARA O ADMINISTRADOR"
                    + "", "ALERTA", JOptionPane.WARNING_MESSAGE);
            limparCampos();
            jB_GERAR_CODIGO.setEnabled(true);
            ocultarCampos();
            jTF_MATRICULA_FUB.setEnabled(true);
            jB_AVANCAR_MATRICULA.setEnabled(true);
            jTF_MATRICULA_FUB.requestFocus();
        } else {
            gerarCodigoVerificador();
        }

    }//GEN-LAST:event_jB_GERAR_CODIGOActionPerformed

    private void jB_VERIFICAR_CODIGOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_VERIFICAR_CODIGOActionPerformed

        botaoVerificar();
    }//GEN-LAST:event_jB_VERIFICAR_CODIGOActionPerformed

    private void formAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_formAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_formAncestorAdded

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened

        ocultarCampos();
    }//GEN-LAST:event_formInternalFrameOpened


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jB_AVANCAR_MATRICULA;
    private javax.swing.JButton jB_CADASTRAR_SENHA;
    private javax.swing.JButton jB_GERAR_CODIGO;
    private javax.swing.JButton jB_VERIFICAR_CODIGO;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel_DIGITE_CODIGO;
    private javax.swing.JLabel jLabel_EMAIL;
    private javax.swing.JLabel jLabel_ESCOLHA_SENHA;
    private javax.swing.JLabel jLabel_INFORME;
    private javax.swing.JLabel jLabel_NOME;
    private javax.swing.JPasswordField jPasswordF_ESCOLHER_SENHA;
    private javax.swing.JTextField jTF_CODIGO_VERIFICADOR;
    private javax.swing.JTextField jTF_EMAIL;
    private javax.swing.JTextField jTF_ESPELHO_CODIGO_VERIFICACAO;
    private javax.swing.JTextField jTF_MATRICULA_FUB;
    private javax.swing.JTextField jTF_NOME;
    // End of variables declaration//GEN-END:variables

    //MÉTODOS COM RETORNO
    public boolean verificarCodigoVerificador() {
        return jTF_ESPELHO_CODIGO_VERIFICACAO.getText().equals(jTF_CODIGO_VERIFICADOR.getText());
    }

    public String nomeUsuario(JTextField jTF_NOME) {
        String nome = jTF_NOME.getText();
        return nome;

    }

    //MÉTODOS SEM RETORNO
    public void setPosicao() {
        Dimension d = this.getDesktopPane().getSize();
        this.setLocation((d.width - this.getSize().width) / 2, (d.height - this.getSize().height) / 2);
    }

    public void gerarCodigoVerificador() {

        //gerando numero aleatorio
        Random numeroAleatorio = new Random();
        int codigoVerificador = 1129 + (numeroAleatorio.nextInt(200) * 1129);
        //espelhando para fazer comparação com o que o usuário digitar  
        jTF_ESPELHO_CODIGO_VERIFICACAO.setText(String.valueOf(codigoVerificador));
        //recebendo parametros para enviar email com o código
        Servidor dadosDoServidor = new Servidor();
        dadosDoServidor.setNome(jTF_NOME.getText());
        dadosDoServidor.setEmail(jTF_EMAIL.getText());
        //enviando email com o código
        enviarEmailComCodigoDeVerificacao(String.valueOf(codigoVerificador), dadosDoServidor.getNome(), dadosDoServidor.getEmail());
        JOptionPane.showMessageDialog(null, "FOI ENVIADO UM CÓDIGO PARA VERFICAÇÃO NO EMAIL CADASTRADO: " + dadosDoServidor.getEmail() + " \nINSIRA O CÓDIGO NO CAMPO SOLICITADO E CLIQUE NO BOTÃO 'VERIFICAR'.");
        // System.out.println(codigoVerificador);
        //return codigoVerificador;
        mostrarCamposAteBotaoVerificar();
    }

    public void botaoVerificar() {

        if (verificarCodigoVerificador() == true) {
            JOptionPane.showMessageDialog(null, "INFORME A SENHA NO CAMPO SOLICITADO E EM SEGUIDA CLIQUE NO BOTÃO: "
                    + "'CADASTRAR'");
            mostarCamposAteBotaoCadastrar();
        } else {
            JOptionPane.showMessageDialog(null, "CÓDIGO VERFICADOR INVÁLIDO. REFAÇA A SOLICITAÇÃO.");
            limparCampos();
            jB_GERAR_CODIGO.setEnabled(true);
            ocultarCampos();
            jTF_MATRICULA_FUB.setEnabled(true);
            jB_AVANCAR_MATRICULA.setEnabled(true);
            jTF_MATRICULA_FUB.requestFocus();
        }
    }

    public void botaoAvancar() {

        //dados do servidor. Passando parametros
        Servidor dadosdoServidor = new Servidor();
        dadosdoServidor.setMatriculaFUB(jTF_MATRICULA_FUB.getText());
        try {                                                        //os Campos de Texto NOME e EMAIL são paramentros
            dadosdoServidor.buscarDadosServidor(dadosdoServidor.getMatriculaFUB(), jTF_NOME, jTF_EMAIL);
            mostrarCamposAteBotaoGerarCodigo();
        } catch (SQLException ex) {
            System.out.println(ex);
            JOptionPane.showMessageDialog(null, "FALHA NA CONEXÃO COM A BASE DE DADOS!");
        }

    }

    public void botaoCadastrar() {

        if ("".equalsIgnoreCase(jPasswordF_ESCOLHER_SENHA.getText())) {
            JOptionPane.showMessageDialog(null, "O CAMPO SENHA NÃO PODE ESTAR VAZIO!");
            jPasswordF_ESCOLHER_SENHA.requestFocus();
        } else {
            Servidor cadastroDeSenha = new Servidor();
            cadastroDeSenha.setMatriculaFUB(jTF_MATRICULA_FUB.getText());
            cadastroDeSenha.setSenha(jPasswordF_ESCOLHER_SENHA.getText());
            cadastroDeSenha.setEmail(jTF_EMAIL.getText());
            cadastroDeSenha.setNome(jTF_NOME.getText());
            try {
                cadastroDeSenha.cadastrarSenha(cadastroDeSenha.getSenha(), cadastroDeSenha.getMatriculaFUB());
                cadastroDeSenha.enviarSenhaPorEmail(cadastroDeSenha.getEmail(), cadastroDeSenha.getSenha(),
                        cadastroDeSenha.getNome());
                JOptionPane.showMessageDialog(null, "SENHA CADASTRADA COM SUCESSO!\n A "
                        + "SENHA CADASTRADA FOI ENVIADA PARA O EMAIL: " + cadastroDeSenha.getEmail() + "\n"
                        + "ACESSE O MENU 'SELECIONAR TIPO DE DOCUMENTO'-->'FAZER LOGIN'");

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "ERRO: NÃO FOI POSSÍVEL CADASTRAR A SENHA!");
                System.out.println(ex);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "ERRO: NÃO FOI POSSÍVEL CADASTRAR A SENHA!");
                System.out.println(ex);
            }
            //limpando campo de senha
            jPasswordF_ESCOLHER_SENHA.setText("");
            //fechando a tela cadastrar senha

            Tela_Cadastrar_Senha fecharTeladeCadastro = new Tela_Cadastrar_Senha();
            fecharTeladeCadastro.nomeUsuario(jTF_NOME);
            fecharTeladeCadastro.setVisible(false);
            dispose();
        }
    }

    public void ocultarCampos() {

        jLabel_NOME.setVisible(false);
        jTF_NOME.setVisible(false);
        jLabel_EMAIL.setVisible(false);
        jTF_EMAIL.setVisible(false);
        jLabel_INFORME.setVisible(false);
        jB_GERAR_CODIGO.setVisible(false);
        jLabel_DIGITE_CODIGO.setVisible(false);
        jTF_CODIGO_VERIFICADOR.setVisible(false);
        jB_VERIFICAR_CODIGO.setVisible(false);
        jTF_ESPELHO_CODIGO_VERIFICACAO.setVisible(false);
        jLabel_ESCOLHA_SENHA.setVisible(false);
        jPasswordF_ESCOLHER_SENHA.setVisible(false);
        jB_CADASTRAR_SENHA.setVisible(false);
    }

    public void limparCampos() {

        jTF_MATRICULA_FUB.setText("");
        jTF_NOME.setText("");
        jTF_EMAIL.setText("");
        jTF_CODIGO_VERIFICADOR.setText("");
        jTF_ESPELHO_CODIGO_VERIFICACAO.setText("");
        jPasswordF_ESCOLHER_SENHA.setText("");
    }

    public void mostrarCamposAteBotaoGerarCodigo() {

        Servidor dadosdoServidor = new Servidor();
        dadosdoServidor.setMatriculaFUB(jTF_MATRICULA_FUB.getText());
        dadosdoServidor.setNome(jTF_NOME.getText().trim());
        dadosdoServidor.setEmail(jTF_EMAIL.getText());

        if ("".equalsIgnoreCase(dadosdoServidor.getMatriculaFUB())) {
            JOptionPane.showMessageDialog(null, "INSIRA O NÚMERO DA MATRICULA!");
            jTF_MATRICULA_FUB.requestFocus();
        } else {
            if ("".equals(dadosdoServidor.getNome()) && "".equals(dadosdoServidor.getNome())) {
                JOptionPane.showMessageDialog(null, "MATRICULA NÃO LOCALIZADA! "
                        + "PROCURE O SETOR DE GESTÃO DE PESSOAS DA FUP.");
                jTF_MATRICULA_FUB.requestFocus();

            } else {
                jLabel_NOME.setVisible(true);
                jTF_NOME.setVisible(true);
                jTF_NOME.setEnabled(false);
                jLabel_EMAIL.setVisible(true);
                jTF_EMAIL.setVisible(true);
                jTF_EMAIL.setEnabled(false);
                jLabel_INFORME.setVisible(true);
                jB_GERAR_CODIGO.setVisible(true);
                jTF_MATRICULA_FUB.setEnabled(false);
                jB_AVANCAR_MATRICULA.setEnabled(false);
                JOptionPane.showMessageDialog(null, "CONFIRA SE O SEU NOME E EMAIL ESTÃO CORRETOS.\n"
                        + "CLIQUE NO BOTÃO 'GERAR CODIGO' PARA PROSSEGUIR COM O CADASTRO.");
            }
        }
    }

    public void mostrarCamposAteBotaoVerificar() {

        jLabel_DIGITE_CODIGO.setVisible(true);
        jTF_CODIGO_VERIFICADOR.setVisible(true);
        jB_VERIFICAR_CODIGO.setVisible(true);
        jB_GERAR_CODIGO.setEnabled(false);
        //jTF_ESPELHO_CODIGO_VERIFICACAO.setVisible(false);
    }

    public void mostarCamposAteBotaoCadastrar() {

        jTF_CODIGO_VERIFICADOR.setEnabled(false);
        jB_VERIFICAR_CODIGO.setEnabled(false);
        jLabel_ESCOLHA_SENHA.setVisible(true);
        jPasswordF_ESCOLHER_SENHA.setVisible(true);
        jB_CADASTRAR_SENHA.setVisible(true);
    }

    //ENVIAR E-MAIL COM O CÓDIGO VERIFICADOR
    public void enviarEmailComCodigoDeVerificacao(String codigoVerficador, String nomedoServidor, String emailServidor) {

        Properties props = new Properties();
        /**
         * Parâmetros de conexão com servidor Gmail
         */
        // props.put("mail.transport.protocol", "smtp");
        props.put("mail.smtp.host", "smtp.live.com");
        props.put("mail.smtp.socketFactory.port", "587");
        // props.put("mail.smtp.socketFactory.class", "javax.net.ssl.SSLSocketFactory");
        props.put("mail.smtp.socketFactory.fallback", "false");
        props.put("mail.smtp.auth", "true");
        props.put("mail.smtp.port", "587");
        props.put("mail.smtp.starttls.enable", "true");

        Session session = Session.getDefaultInstance(props,
                new javax.mail.Authenticator() {
            @Override
            protected PasswordAuthentication getPasswordAuthentication() {
                String email = "numerador_docs@hotmail.com";
                String senha = "gpfup2018";
                return new PasswordAuthentication(email, senha);
            }
        });

        /**
         * Ativa Debug para sessão
         */
        session.setDebug(true);

        try {
            String remetente = "numerador_docs@hotmail.com";
            Message message = new MimeMessage(session);
            message.setFrom(new InternetAddress(remetente)); //Remetente

            Address[] toUser = InternetAddress //Destinatário(s)
                    .parse(emailServidor);

            message.setRecipients(Message.RecipientType.TO, toUser);
            message.setSubject("não-responda-Numerador-Documentos");//Assunto
            message.setText(nomedoServidor + ", \nVocê está efetuando seu cadastro no Numerador de Documentos da FUP. \n Digite no campo solicitado o seguinte código verificador: " + codigoVerficador);
            /**
             * Método para enviar a mensagem criada
             */
            Transport.send(message);

            System.out.println("Feito!!!");

        } catch (MessagingException e) {
            throw new RuntimeException(e);
        }
    }

}
